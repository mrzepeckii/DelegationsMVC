@model DelegationsMVC.Application.ViewModels.DelegationVm.NewDelegationVm

@{
    ViewData["Title"] = "EditDelegation";
}

<div class="form-row">
    <h1>Edytuj delegację</h1>
</div>


<div class="form-row">
    <div class="col-md-8">
        <form asp-action="EditDelegation">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Id" type="hidden" class="form-control" />
            <div class="form-row">
                <div class="form-group col">
                    <label asp-for="Purpose" class="control-label">Cel delegacji</label>
                    <input asp-for="Purpose" class="form-control" />
                    <span asp-validation-for="Purpose" class="text-danger"></span>
                </div>
                <div class="form-group col">
                    <label asp-for="DestinationId" class="control-label">Miejsce delegacji</label>
                    <select asp-for="DestinationId" asp-items="@(new SelectList(Model.Destinations, "Id", "Name"))" class="form-control"></select>
                    <span asp-validation-for="DestinationId" class="text-danger"></span>
                </div>
            </div>
            <input asp-for="EmployeeId" type="hidden" class="form-control" />
            <input asp-for="DelegationStatusId" type="hidden" class="form-control" />
            <div class="form-row">
                <div class="form-group col">
                    <label asp-for="Costs[0].Amount" class="control-label">Noclegi</label>
                    <input step="0.1" asp-for="Costs[0].Amount" asp-format="{0:n0}" class="form-control" />
                    <span asp-validation-for="Costs[0].Amount" class="text-danger"></span>
                    <input type="hidden" asp-for="Costs[0].CostTypeId" value="1" />
                    <input type="hidden" asp-for="Costs[0].CostId" />
                </div>
                <div class="form-group col">
                    <label asp-for="Costs[1].Amount" class="control-label">Dodatkowe wydatki</label>
                    <input asp-for="Costs[1].Amount" asp-format="{0:n0}" class="form-control" />
                    <span asp-validation-for="Costs[1].Amount" class="text-danger"></span>
                    <input type="hidden" asp-for="Costs[1].CostTypeId" value="2" />
                    <input type="hidden" asp-for="Costs[1].CostId" />
                </div>                
            </div>
            <div class="form-group">
                <input type="submit" value="Zapisz zmiany" class="btn btn-dark" />
            </div>
        </form>
    </div>
</div>

<div class="form-row">
    <table class="table table-bordered" id="table">
        <thead class="thead-dark">
            <tr>
                <th>
                    Data wyjazdu
                </th>
                <th>
                    Miejsce wyjazdu
                </th>
                <th>
                    Data przyjazdu
                </th>
                <th>
                    Miejsce przyjazdu
                </th>
                <th>
                    Kilometry
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var route in Model.Routes)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => route.RouteDetail.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => route.RouteDetail.StartPoint)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => route.RouteDetail.EndDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => route.RouteDetail.EndPoint)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => route.RouteDetail.Kilometers)
                    </td>
                    <td>
                        @Html.ActionLink("Usuń", "DeleteRoute", new { idRoute = route.Id, idDel = route.DelegationId })
                        |
                        <a href="javascript:EditRoute(@route.Id,@route.DelegationId,@route.TypeOfTransportId)">Edytuj</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<input id="AddRoute" type="button" class="btn btn-dark" value="Dodaj podróż" onclick="AddRoute()" />
<button id="DeleteForm" type="button" class="btn btn-dark" onclick="ClearRoute()">Usuń formularz</button>
<div id="Route">

</div>

<div>
    <a asp-action="Index">Powrót do listy delegacji</a>
</div>

@section Scripts {

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/js/tempusdominus-bootstrap-4.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/css/tempusdominus-bootstrap-4.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/js/all.js" integrity="sha256-2JRzNxMJiS0aHOJjG+liqsEOuBb6++9cY4dSOyiijX4=" crossorigin="anonymous"></script>

    <script type="text/javascript">

        $(document).ready(function() {
            $('#DeleteForm').hide();
        });

         function AddRoute() {
            var $divRoute = $('#Route');
             $divRoute.empty();
            var url = '@Url.Action("NewRoute","Delegation", new { id = Model.Id} )';
            $divRoute.load(url);
             $('#AddRoute').attr("onclick", "ClearRoute()").attr("value", "Usuń formularz");
        }

        function ClearRoute() {
            $('#Route').empty();
            $('#AddRoute').attr("onclick", "AddRoute()").attr("value", "Dodaj podróż");
            $('#DeleteForm').hide();
        }

        function CheckState() {
            if ($('#TransportTypeSelector').val() == "1") {
                $('#Vehicle').show();
                $('#VehicleSelector').prop('selectedIndex', 0);
            }
            else {
                $('#Vehicle').hide();
                $('#VehicleSelector').val("0");
            }
        }

        $(function () {
            $('#dateTimePickerSD').datetimepicker({
                locale: 'pl'
            });
        });

        $(function () {
            $('#dateTimePickerED').datetimepicker({
                locale: 'pl'
            });
        });

        function EditRoute(routeId, delId, transportId) {
            ClearRoute();
            var $divRoute = $('#Route');
           var url = '@Url.Action("EditRoute", "Delegation")?idRoute=' + routeId + '&idDel=' + delId;
            $divRoute.load(url, function () {
                if (transportId != 1) {
                    $('#Vehicle').hide();
                }
            });
            $('#DeleteForm').show();
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
